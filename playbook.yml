---
- hosts: all
  become: yes
  tasks:

  - name: Set a hostname
    ansible.builtin.hostname:
      name: monitoring

  - name: Set timezone to Europe/Kiev
    community.general.timezone:
      name: Europe/Kiev


  # - name: Wait for disk to be available
  #   ansible.builtin.wait_for:
  #     path: /dev/sdb

  # - name: Create a xfs filesystem on disk
  #   community.general.filesystem:
  #     fstype: xfs
  #     dev: /dev/sdb
  #     force: yes

  # - name: Make xfs and mount
  #   ansible.posix.mount:
  #     path: /data
  #     src: /dev/sdb
  #     fstype: xfs
  #     opts: noatime
  #     state: mounted

  - name: Get stats of docker dir
    ansible.builtin.stat:
      path: /root/.docker
    register: dot_docker

  - name: Create dir .docker
    ansible.builtin.file:
      path: /root/.docker
      owner: root
      group: root
      state: directory
      mode: '0755'
    when: dot_docker.stat.exists == false

  # - name: Copy file with owner and permissions
  #   ansible.builtin.copy:
  #     src: /tmp/config.json
  #     dest: /root/.docker/config.json
  #     owner: root
  #     group: root
  #     mode: '0644'
  #     remote_src: yes

  # - name: Deploy docker auth
  #   ansible.builtin.file:
  #     path: /root/.docker/config.json
  #     owner: root
  #     group: root
  #     mode: '0644'
  #     state: absent
  # - name: Deploy docker auth
  #   ansible.builtin.file:
  #     path: /root/.docker/config.json
  #     owner: root
  #     group: root
  #     mode: '0644'
  #     state: absent

  - name: Install Prometheus
    include_role:
      name: cloudalchemy.prometheus
    vars:
      vaprometheus_version: 2.25.0
      prometheus_web_listen_address: 0.0.0.0:9090
      prometheus_db_dir: /data
      prometheus_targets:
        node:
          - targets:
            - "{{ node_ip }}:9100"

  - name: Install Grafana
    include_role:
      name: cloudalchemy.grafana
    vars:
      grafana_security:
        admin_user: admin
        admin_password: "{{ grafana_admin_password }}"
      grafana_datasources:
        - name: prometheus
          type: prometheus
          access: proxy
          url: 'http://127.0.0.1:9090'
          basicAuth: false
      grafana_dashboards:
        - dashboard_id: 8919
          revision_id: 1
          datasource: prometheus




  - name: Set grafana user
    community.grafana.grafana_user:
      url: "http://{{ prometheus_ip }}:3000"
      url_username: admin
      url_password: "{{ grafana_admin_password }}"
      name: "{{ grafana_user_name }}"
      email: "{{ grafana_user_mail }}"
      login: "{{ grafana_user_login }}"
      password: "{{ grafana_user_password }}"
      is_admin: true
      state: present
